definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Product:
    properties:
      category:
        example: Limpeza
        type: string
      description:
        example: Sabão de côco
        type: string
      discountPrice:
        example: 10
        type: number
      id:
        type: integer
      imageURL:
        type: string
      isActive:
        example: true
        type: boolean
      name:
        example: Sabão de côco
        type: string
      price:
        example: 10
        type: number
      stock:
        example: 10
        type: integer
    type: object
  models.ProductRequest:
    properties:
      category:
        example: Limpeza
        type: string
      description:
        example: Sabão de côco
        type: string
      discountPrice:
        example: 10
        type: number
      imageURL:
        type: string
      isActive:
        example: true
        type: boolean
      name:
        example: Sabão de côco
        type: string
      price:
        example: 10
        type: number
      stock:
        example: 10
        type: integer
    type: object
  models.ProductResponse:
    properties:
      category:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      discountPrice:
        type: number
      id:
        example: 1
        type: integer
      imageURL:
        type: string
      isActive:
        type: boolean
      name:
        example: Sabão de côco
        type: string
      price:
        type: number
      stock:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Get a list of products with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of products per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get a list of products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product by passing product information
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ProductResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create a new product
      tags:
      - products
swagger: "2.0"
